user nobody nogroup;
pid /tmp/nginx.pid;
worker_processes 1;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  use epoll; # a fast event mechanism for Linux 2.6+
}
http {
  # Basic Settings
  sendfile on;
  tcp_nopush on;
  types_hash_max_size 2048;
  server_tokens off;

  # server_names_hash_bucket_size 64;
  # server_name_in_redirect off;
  include /etc/nginx/mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;

  # SSL Settings
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;

  # Logging Settings
  log_format nginx '\$remote_addr - \$remote_user [\$time_local] '
                  '"\$request" \$status \$body_bytes_sent \$request_time '
                  '"\$http_referer" "\$http_user_agent"';
  access_log /var/log/nginx/access.log combined;
  error_log /var/log/nginx/error.log;

  # Gzip Settings
  gzip on;

  #include mime.types;
  client_max_body_size 30M;
  # Set up a generous ssl session cache to reduce overhead
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  # Disable delayed sending of small packets
  tcp_nodelay on;
  proxy_connect_timeout       600;
  proxy_send_timeout          600;
  proxy_read_timeout          600;
  send_timeout                600;
#  server {
#    # if no Host match, close the connection to prevent host spoofing
#    listen 80 default_server;
#    return 444;
#  }
#  server {
#    # if no Host match, close the connection to prevent host spoofing
#    listen 443 ssl default_server;
#    return 444;
#  }

  limit_conn_zone $binary_remote_addr zone=addr:10m;

  resolver 127.0.0.11;

  include /etc/nginx/sites-enabled/*;
}
